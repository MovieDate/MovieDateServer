<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace为对应的dao类路径 -->
<mapper namespace="com.moviedateserver.dao.PostDao">
    <!--目的:为dao接口方法提供sql语句配置
    即针对dao接口中的方法编写我们的sql语句-->

    <!--id对应dao的方法名，如果是多参数parameterType不用给，但需要在dao方法的参数前加上@Param("killTime")
            例如：int reduceNumber(@Param("seckillId") long seckillId, @Param("killTime") Date killTime);-->
    <!--注意：增删改查对应相应的标签，更新操作对应update标签，插入对应insert，查找对应select，删除对应delete-->

    <!--查找所有post，并按postTime排序好-->
    <select id="findAllPost" resultType="Post">
        SELECT *
        FROM post_tab
    </select>

    <!--通过 addPostByPostpersonid 来添加 -->
    <insert id="addPostByPostPersonId">
        <!--当出现主键冲突时(即重复时)，会报错;不想让程序报错，加入ignore -->
        INSERT ignore INTO post_tab(postPersonId,postTime,site,movieName,movieTime,sex,movieType,details)
        VALUES (#{postPersonId},#{postTime},#{site},#{movieName},#{movieTime},#{sex},#{movieType},#{details});
    </insert>

    <!--通过 id 删除帖子,因为一个postpersonid可以有多个帖子，但是一次只要求删一个-->
    <delete id="deletePostByPostPersonId" parameterType="int">
        <!--具体SQL语句-->
        DELETE FROM post_tab
        WHERE id=#{id};
    </delete>

    <!--通过 id 更新帖子内容，,因为一个postpersonid可以有多个帖子，但是一次只要求更新一个-->
    <update id="updatePostById">
        <!--具体SQL语句-->
        UPDATE post_tab
        SET postTime = #{postTime},site = #{site},movieName = #{movieName},movieTime = #{movieTime},sex = #{sex},endTime = #{endTime},movieType = #{movieType},details = #{details}
        WHERE id=#{id};
    </update>

    <!--通过地点or 约影的影片名字 or约影地点 or发帖内容 -->
    <select id="findPostByid" resultType="Post" parameterType="int">
        SELECT *
        FROM post_tab
        WHERE id=#{id};
    </select>
    <select id="findPostByid2" resultType="Post" parameterType="int">
        SELECT *
        FROM post_tab
        WHERE id ARE IN ();
    </select>
    <select id="findPostBymovieName" resultType="Post" parameterType="String">
        SELECT *
        FROM post_tab
        WHERE movieName=#{movieName};
    </select>
    <select id="findPostBysite" resultType="Post" parameterType="String">
        SELECT *
        FROM post_tab
        WHERE site=#{site};
    </select>
    <select id="findPostBydetails" resultType="Post" parameterType="String">
        SELECT *
        FROM post_tab
        WHERE details=#{details};
    </select>

    <select id="findposttab" resultType="Post" >
        SELECT *
        FROM post_tab
        WHERE CONCAT (site,movieName,details) LIKE #{details};
    </select>



</mapper>